import { FailureReason, IBasePolicyOptions, IPolicy } from './Policy';
export declare class FallbackPolicy<AltReturn> implements IPolicy<void, AltReturn> {
    private readonly options;
    private readonly value;
    private readonly fallbackEmitter;
    /**
     * Event that fires when a fallback happens.
     */
    readonly onFallback: import("./common/Event").Event<FailureReason<unknown>>;
    constructor(options: IBasePolicyOptions, value: () => AltReturn);
    /**
     * Executes the given function.
     * @param fn -- Function to execute.
     * @returns The function result or fallback value.
     */
    execute<T>(fn: (context: void) => PromiseLike<T> | T): Promise<T | AltReturn>;
}
